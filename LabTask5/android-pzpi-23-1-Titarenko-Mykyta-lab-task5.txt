Міністерство освіти і науки України



Харківський національний університет радіоелектроніки







Кафедра програмної інженерії




Звіт
з лабораторної роботи №5
з дисципліни «Програмування під Android»






   Виконав:                                                                             Перевірили:
   ст. гр. ПЗПІ-23-1                                                                Сокорчук Ігор
   Тітаренко Микита                                                              Петрович











Харків 2024
ЗАВДАННЯ

1.	Доповнити завдання №4 наступними функціями:
	реалізувати різне відображення для портретної та ланшафтної орієнтації екрану за допомогою тих самих фрагментів;
	створити дві редаговані теми (тло, гарнітура шрифту, колір тексту тощо) і застосовувати їх в залежності від налаштувань програми.
2.	Додати можливість задавати в налаштуваннях програми розмір шрифту.
3.	Переробити завдання №4 так, щоб дані нотаток зберігалися у базі даних SQLite






















ХІД РОБОТИ

1.	Зберігання даних через SQLLite
1.1.	Створюємо клас DBHelper, який наслідує SQLiteOpenHelper.
1.2.	Перевизначимо метод onCreate для створення нової бази даних.
1.3.	Реалізуємо методи onInsert, onUpdate, onDelete для зміни записіув у базі даних..
1.4.	Реалізуємо виведення даних за допомогою методів onSelect і Filter.
Фрагмент коду для реалізації методів onInsert і onUpdate:
48. public void onInsert(String title, String description, int importance, String eventDate, String eventTime, String creationDate, byte[] imageData){
49.     SQLiteDatabase db = getWritableDatabase();
50.     ContentValues contentValues = CreateNote(title, description, importance, eventDate, eventTime, creationDate, imageData);
51.     db.insert("notes", null, contentValues);
52. }

53. public void onUpdate(int number, String title, String description, int importance, String eventDate, String eventTime, String creationDate, byte[] imageData){
54.     SQLiteDatabase db = getWritableDatabase();
55.     ContentValues contentValues = CreateNote(title, description, importance, eventDate, eventTime, creationDate, imageData);
56.     db.update("notes", contentValues, "number = ?", new String[]{String.valueOf(number)});
57. }
2.	Реалізація стилів
2.1.	У папці themes прописуємо 3 різні стилі, які змінюють розмір шрифту для тексту.
2.2.	Створимо окремі стилі для blueStyle, brownStyle для різних відображень розмітки..
Фрагмент коду для реалізації різних стилів:
1.    <style name="blueStyle" parent="Theme.Material3.DayNight.NoActionBar">
2.        <item name="editTextStyle">@style/EditTextStyleForBlueStyle</item>
3.        <item name="android:buttonStyle">@style/ButtonStyleForBlueStyle</item>
4.        <item name="android:textViewStyle">@style/TextViewStyleForBlueStyle</item>
5.        <item name="toolbarStyle">@style/CustomToolbarForBlueStyle</item>
6.    </style>

7.    <style name="ButtonStyleForBlueStyle" parent="Widget.AppCompat.Button">
8.        <item name="android:backgroundTint">@color/blueButton</item>
9.        <item name="android:textColor">@color/blueText</item>
10.        <item name="android:padding">5dp</item>
 11.       <item name="android:fontFamily">@font/blue_font_family</item>
12.    </style>
13.
14.    <style name="EditTextStyleForBlueStyle" parent="Widget.AppCompat.EditText">
15.        <item name="android:textColor">@color/blueText</item>
 16.       <item name="android:textColorHint">@color/blueText</item>
17.        <item name="android:fontFamily">@font/blue_font_family</item>
18.    </style>
19.
20.    <style name="TextViewStyleForBlueStyle" parent="Widget.AppCompat.TextView">
21       <item name="android:textColor">@color/blueText</item>
22.        <item name="fontFamily">@font/blue_font_family</item>
23.    </style>
3.	Використання фрагментів для різної орієнтації екрану
3.1.	Створимо новий фрагмент activity_create_and_edit_noteFragment.
3.2.	Реалізуємо основні методи onCreateView, onViewCreated, тощо.
3.3.	Завантажемо фрагмент за допомогою getSupportFragmentManager.
3.4.	Зробимо два різних фрагмента для різної орієнтаціє екрану
Фрагмент коду для реалізації фрагменту:
4.	@Override
5.	    public void onResume() {
6.	        super.onResume();
7.	        Activity activity = getActivity();
8.	        if (activity != null && activity.getWindow() != null) {
9.	            activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS);
10.	        }
11.	
12.	        delayedHide(100);
13.	    }
14.	
15.	    @Override
16.	    public void onPause() {
17.	        super.onPause();
18.	        if (getActivity() != null && getActivity().getWindow() != null) {
19.	            getActivity().getWindow().clearFlags(WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS);
20.	
21.	            // Clear the systemUiVisibility flag
22.	            getActivity().getWindow().getDecorView().setSystemUiVisibility(0);
23.	        }
24.	        show();
    } 















ВИСНОВОК

	Отже, виконавши лабораторну роботу №5, я навчився реалізовувати різні стилі та динамічно їх змінювати, змінювати розмітку в різній орієнтації екрану за допомогою фрагментів, зберігати дані в базі даних. Посилання на відеозвіт: https://youtu.be/cRzmqopdmr4.
























ВИКОРИСТАНІ ДЖЕРЕЛА

1.	String resources / Guides / Develop / Android Develops. URL: 
https://developer.android.com/guide/topics/resources/string-resource (дата звернення: 09.11.2024).
2.	Android Studio saving-states / Android Studio / Develop / Android Develops. URL: 
https://developer.android.com/topic/libraries/architecture/saving-states (дата звернення: 09.11.2024).





















ДОДАТОК А
Код програми
Увесь код програми можно знайти за посиланням у GitHub:
https://github.com/NureTitarenkoMykyta/android-pzpi-23-1-titarenko-mykyta/tree/main/LabTask4/android-pzpi-23-1-Titarenko-Mykyta-lab-task5

